# Django settings for powermon project.

DEBUG = True
TEMPLATE_DEBUG = DEBUG

# Relative URL to Django admin application
ADMIN_URL = '/admin/'

ADMINS = (
    ('Your Name Here', 'somebody@example.com'),
)

MANAGERS = ADMINS

DATABASES = {
    'default': {
        'ENGINE': 'django.db.backends.postgresql_psycopg2',
        'NAME': 'powermon',
        'USER': 'powermon_user',
        'PASSWORD': 'not_the_password',
        'HOST': 'hostname',
        'PORT': '5432',
    }
}

# Use a SQLite database for unit tests
import sys
if 'test' in sys.argv:
    DATABASES['default'] = {
        'ENGINE': 'django.db.backends.sqlite3'
    }

# Local time zone for this installation. Choices can be found here:
# http://en.wikipedia.org/wiki/List_of_tz_zones_by_name
# although not all choices may be available on all operating systems.
# In a Windows environment this must be set to your system time zone.
TIME_ZONE = 'America/New_York'

# Language code for this installation. All choices can be found here:
# http://www.i18nguy.com/unicode/language-identifiers.html
LANGUAGE_CODE = 'en-us'

SITE_ID = 1

# If you set this to False, Django will make some optimizations so as not
# to load the internationalization machinery.
USE_I18N = True

# If you set this to False, Django will not format dates, numbers and
# calendars according to the current locale.
USE_L10N = True

# If you set this to False, Django will not use timezone-aware datetimes.
USE_TZ = False

# Relative URL to powermon Django application
ROOT_URL = '/powermon/'

# Absolute filesystem path to the directory that will hold user-uploaded files.
# Example: "/home/media/media.lawrence.com/media/"
MEDIA_ROOT = ''

# URL that handles the media served from MEDIA_ROOT. Make sure to use a
# trailing slash.
# Examples: "http://media.lawrence.com/media/", "http://example.com/media/"
MEDIA_URL = ''

# Absolute filesystem path to application root.
# This path is used for deployment scripts and to derive other absolute
# paths like STATIC_ROOT.
APPLICATION_ROOT = '/var/www/powermon'

# Absolute path to the directory static files should be collected to.
# Don't put anything in this directory yourself; store your static files
# in apps' "static/" subdirectories and in STATICFILES_DIRS.
# Example: "/home/media/media.lawrence.com/static/"
STATIC_ROOT = APPLICATION_ROOT + '/static'

# URL prefix for static files.
# Example: "http://media.lawrence.com/static/"
STATIC_URL = '/static/'

# Additional locations of static files
STATICFILES_DIRS = (
    # Put strings here, like "/home/html/static" or "C:/www/django/static".
    # Always use forward slashes, even on Windows.
    # Don't forget to use absolute paths, not relative paths.
)

# List of finder classes that know how to find static files in
# various locations.
STATICFILES_FINDERS = (
    'django.contrib.staticfiles.finders.FileSystemFinder',
    'django.contrib.staticfiles.finders.AppDirectoriesFinder',
#    'django.contrib.staticfiles.finders.DefaultStorageFinder',
)

# Make this unique, and don't share it with anybody.
# A good unixy command to generate a random 256-bit secret key:
# dd if=/dev/urandom bs=1 count=32 | base64
SECRET_KEY = 'ljGXaqDDGfVVfIHnxiD5iUKcLrnnQIKScm8nMu8r/CQ='

# List of callables that know how to import templates from various sources.
TEMPLATE_LOADERS = (
    'django.template.loaders.filesystem.Loader',
    'django.template.loaders.app_directories.Loader',
#     'django.template.loaders.eggs.Loader',
)

# A tuple of callables that are used to populate the context in RequestContext.
# These callables take a request object as their argument and return a dictionary
# of items to be merged into the context.
TEMPLATE_CONTEXT_PROCESSORS = (
    'django.core.context_processors.debug',
    'django.core.context_processors.i18n',
    'django.core.context_processors.media',
    'django.core.context_processors.static',
    'django.core.context_processors.tz',
    'django.contrib.messages.context_processors.messages',
    'django.contrib.auth.context_processors.auth',
    'powermon.context_processors.root_url'
)

# A tuple of middleware classes to use.
MIDDLEWARE_CLASSES = (
    'django.middleware.common.CommonMiddleware',
    'django.contrib.sessions.middleware.SessionMiddleware',
    'django.middleware.csrf.CsrfViewMiddleware',
    'django.contrib.auth.middleware.AuthenticationMiddleware',
    'django.contrib.messages.middleware.MessageMiddleware',
    'monitor.util.SecureTransportMiddleware',
    # Uncomment the next line for simple clickjacking protection:
    # 'django.middleware.clickjacking.XFrameOptionsMiddleware',
)

ROOT_URLCONF = 'powermon.urls'

# Python dotted path to the WSGI application used by Django's runserver.
WSGI_APPLICATION = 'powermon.wsgi.application'

# Absolute filesystem path to location where Django app is deployed.
# In most cases this should be relative to APPLICATION_ROOT.
WSGI_ROOT = APPLICATION_ROOT + '/pysrc'

TEMPLATE_DIRS = (
    # Other template directories here.
    # Typically these are absolute paths.
    'conf-tmpl',
)

INSTALLED_APPS = (
    'django.contrib.admin',
    'django.contrib.auth',
    'django.contrib.contenttypes',
    'django.contrib.sessions',
    'django.contrib.staticfiles',
    'monitor'
)

# Absolute filesystem path to directory where application log files are written.
# This should be relative to APPLICATION_ROOT in most cases.
LOGGING_DIR = '/var/log'

# See http://docs.djangoproject.com/en/dev/topics/logging for
# more details on how to customize your logging configuration.
LOGGING = {
    'version': 1,
    'disable_existing_loggers': False,
    'formatters': {
        'standard': {
            'format': '%(asctime)s %(levelname)s %(process)d %(message)s'
        }
    },
    'handlers': {
        'file': {
            'level': 'DEBUG',
            'class': 'logging.handlers.TimedRotatingFileHandler',
            'filename': LOGGING_DIR + '/powermon.log',
            'when': 'midnight',
            'interval': 1,
            'formatter': 'standard',
        }
    },
    'loggers': {
        'django.request': {
            'handlers': ['file'],
            'level': 'WARN',
            'propagate': True
        },
        'monitor': {
            'handlers': ['file'],
            'level': 'INFO',
            'propagate': True
        }
    }
}

# Security configuration
AUTHENTICATION_BACKENDS = (
    'django.contrib.auth.backends.ModelBackend',
)
LOGIN_URL = '/accounts/login/'
LOGOUT_URL = '/accounts/logout/'

# Secure transport middleware configuration.
# Either whitelist or blacklist
# For whitelist strategy, require SSL only for listed paths.
# For blacklist strategy, require SSL except for listed paths.
SECURE_TRANSPORT_MODE = 'blacklist'
SECURE_TRANSPORT_PATHS = (
    '/powermon/record/',
)


# Threshold in minutes after which one or more stations not reporting data
# triggers the ERROR (all) or WARN (more than one) states of the status URI
STATUS_TIMEOUT = 10
